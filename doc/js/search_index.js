var search_data = {"index":{"searchIndex":["object","do_nothing()","extract_logs()","extract_resource_statuses()","filter_by_time()","parse_custom_methods()","print_host_changes()","print_host_logs()","process_files()","process_files_recurse()","read_report()","readme"],"longSearchIndex":["object","object#do_nothing()","object#extract_logs()","object#extract_resource_statuses()","object#filter_by_time()","object#parse_custom_methods()","object#print_host_changes()","object#print_host_logs()","object#process_files()","object#process_files_recurse()","object#read_report()",""],"info":[["Object","","Object.html","",""],["do_nothing","Object","Object.html#method-i-do_nothing","()","<p>Literally, do nothing.\n"],["extract_logs","Object","Object.html#method-i-extract_logs","(logs)","<p>Simpler extract method which, given Puppet::Transaction::Report.logs\noutput, returns strings if within …\n"],["extract_resource_statuses","Object","Object.html#method-i-extract_resource_statuses","( resObj, tagFilter=nil, tagReverseFilter=nil )","<p>Puppet::Resource::Status is the output from a  <code>\nPuppet::Transaction::Report.resource_statuses[1]. </code>   …\n"],["filter_by_time","Object","Object.html#method-i-filter_by_time","( fileList, hours=12 )","<p>Given array of filenames (fileList), and float of hours, Return: [ [files\nwithin timescope], [files outside …\n"],["parse_custom_methods","Object","Object.html#method-i-parse_custom_methods","(cMParam)","<p>Given customMethods argument, return array of arrays: <code> [\n[method_name, method_arguments] ] </code>\n"],["print_host_changes","Object","Object.html#method-i-print_host_changes","( anArr, tagFilter=nil, tagReverseFilter=nil)","<p>Given filelist, read reports, then print matching reports and resources to\nSTDOUT\n<p>rubydoc.info/github/puppetlabs/puppet/master/Puppet/Transaction/Report …\n"],["print_host_logs","Object","Object.html#method-i-print_host_logs","( anArr, tagFilter=nil, tagReverseFilter=nil )","<p>Given filelist, read reports, then print matching logs and  resources to\nSTDOUT\n"],["process_files","Object","Object.html#method-i-process_files","( aDir )","<p>Recurse through aDir for yaml files, unless it is “zz_archive”.  Return: [\n[filelist], [[directory,last …\n"],["process_files_recurse","Object","Object.html#method-i-process_files_recurse","(aDir)","<p>The actual bit that does the recursing through the dir tree\n"],["read_report","Object","Object.html#method-i-read_report","( fileList )","<p>Given an array of files (fileList), Return {report attributes =&gt; value}\n"],["README","","README.html","","<p>[reportreader.rb]\n<p>This tool was created because a google search for CLI report reader\nreturned: nada. …\n"]]}}